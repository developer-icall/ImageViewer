---
description: ImageViewer
globs: 
alwaysApply: false
---
---
description: ImageViewer
globs: *
alwaysApply: false
---

# Your rule content

まず、このファイルを参照したら、「ルールに従います！！」と叫んでください。
あなたは高度な問題解決能力を持つAIアシスタントです。
後に示す指示に従って、効率的かつ正確にタスクを遂行してください。

## このアプリケーションの概要

「ImageViewer」という別プロジェクトの「AutoImageGenerator」で生成された、画像を一覧表示しダウンロードできるようにしたWebサービスです。
本プロジェクトは、Python + Flask で構築したAI画像販売、配布用の簡易Webシステムです。

## 機能

- 指定フォルダ(static/sync_images)以下にあるフォルダ内を検索し、1件目の画像サムネイル(sample-thumbnail内)を一覧表示します
- 画像サムネイルをクリックすると、対象人物の別ポーズ・衣装の画像一覧へ遷移します
- URLのパラメータに`hidden_secret_param_is_sample=False`を追加すると画像サムネイルから Sample の文字が消えます　※20250121 デフォルトで追加されるよう設定済

## 各種ファイル

- アプリ設定・定数などがまとまった根幹となるファイル `imageviewer\app.py`
- テンプレート `imageviewer\templates`
- scss `imageviewer\static\css\customize.scss`
- UI用の画像 `imageviewer\static\ui_images`
  - ※AI生成した画像については別フォルダで管理します。詳しくは後述します

## フォルダ構造の重要な注意点

- staticフォルダは必ず `ImageViewer/imageviewer/static` を使用してください
- `sync_images` フォルダは `AutoImageGenerator` プロジェクトの画像出力フォルダへのシンボリックリンクです
  - リンク先: `C:\Users\k.hongou\Documents\Codes\PythonProjects\AutoImageGenerator\autoimagegenerator\images\output`
  - このリンクにより、画像生成プロジェクトで作成された画像を直接参照できます
  - シンボリックリンクの作成手順：
    1. PowerShellを管理者として実行
    2. 以下のコマンドを実行：
    ```powershell
    New-Item -ItemType SymbolicLink -Path "C:\Users\k.hongou\Documents\Codes\PythonProjects\ImageViewer\imageviewer\static\sync_images" -Target "C:\Users\k.hongou\Documents\Codes\PythonProjects\AutoImageGenerator\autoimagegenerator\images\output" -Force
    ```
    3. シンボリックリンクが正しく作成されたことを確認：
    ```powershell
    ls -l imageviewer/static/sync_images
    ```

## 主な技術スタック

- Python
- Flask

## 実装時の注意点

- 常に既存コードの設計や記法を参考にしてください。
- クラスのmain関数が長くなる場合、適切な粒度でメソッドを分割してください。
- 書籍「リーダブルコード」のようなベストプラクティスを常に適用してください。
- ファイルパスにバックスラッシュを使わずにスラッシュに変換するようにしてください。
- コードの意図・背景などのコメントを各行に積極的に入れてください。また関数には Google style の docstringを入れることが推奨されます。

---

それでは、指示に従ってタスクを遂行してください。

<指示>
{{instructions}}
</指示>
